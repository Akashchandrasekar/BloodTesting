<!-- Bootstrap 5 CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

<!-- DataTables Bootstrap 5 CSS -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />

<!-- Container for layout -->
<div class="container mt-4">
    <h2 class="mb-4">Medical Tests</h2>

    <table id="testsTable" class="table table-striped table-bordered" style="width:100%">
        <thead>
            <tr>
                <th>Name</th>
                <th>Category</th>
                <th>Code</th>
                <th>Type</th>
                <th>Description</th>
                <th>Fasting</th>
            </tr>
        </thead>
    </table>
</div>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Bootstrap Bundle JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<!-- DataTables JS and Bootstrap 5 integration -->
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>

<script>
    $(document).ready(function () {
        $('#testsTable').DataTable({
            processing: true,
            serverSide: true,
            pagingType: "simple_numbers",
            language: {
                paginate: {
                    previous: '← Prev',
                    next: 'Next →'
                },
                info: "Showing _START_ to _END_ of _TOTAL_ tests",
                lengthMenu: "Show _MENU_ entries per page",
                search: "Filter:"
            },
            ajax: function (data, callback) {
                const sort = data.order[0];
                const sortBy = data.columns[sort.column].data;
                const sortDir = sort.dir;

                $.getJSON('/api/MedicalTests', {
                    page: data.start / data.length + 1,
                    pageSize: data.length,
                    sortBy: sortBy,
                    sortDir: sortDir
                }, function (response) {
                    callback({
                        recordsTotal: response.total,
                        recordsFiltered: response.total,
                        data: response.data
                    });
                });
            },
            columns: [
                { data: 'name' },
                { data: 'categoryId' },
                { data: 'code' },
                { data: 'type' },
                { data: 'description' },
                {
                    data: 'fastingRequired',
                    render: function (data) {
                        return data ? 'Yes' : 'No';
                    }
                }
            ]
        });
    });
</script>


